{"version":3,"sources":["components/login.jsx","components/success.jsx","components/failed.jsx","components/signUp.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","state","username","password","login","success","signUp","changeHandle","event","target","name","value","setState","signUpHandle","loginHandle","preventDefault","dataInput","axios","url","method","data","then","res","console","log","mess","catch","this","to","className","style","height","class","placeholder","onChange","type","onClick","Component","Success","back","xHandle","data-dismiss","aria-hidden","props","Failed","SignUp","created","createHandle","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.42f0296f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    login: false,\r\n    success: false,\r\n    signUp: false\r\n  };\r\n  changeHandle = event => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  signUpHandle = event => {\r\n    this.setState({ signUp: true });\r\n  };\r\n  loginHandle = event => {\r\n    event.preventDefault();\r\n    const dataInput = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    //make a post request\r\n    axios({\r\n      url: \"http://localhost:8080/login\",\r\n      method: \"POST\",\r\n      data: dataInput\r\n    })\r\n      .then(res => {\r\n        console.log(\"Data has been sent to server\");\r\n\r\n        if (res.data.mess == \"true\") {\r\n          this.setState({\r\n            success: true,\r\n            login: true\r\n          });\r\n        } else {\r\n          this.setState({\r\n            success: false,\r\n            login: true\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Server err\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.signUp) {\r\n      return <Redirect to=\"/signUp\" />;\r\n    } else {\r\n      if (this.state.login) {\r\n        if (this.state.success) {\r\n          return <Redirect to=\"/success\" />;\r\n        } else {\r\n          return <Redirect to=\"/failed\" />;\r\n        }\r\n      } else {\r\n        return (\r\n          <div className=\"container\" style={{ height: \"100vh\" }}>\r\n            <div\r\n              className=\"row justify-content-center\"\r\n              style={{ height: \"100%\" }}\r\n            >\r\n              <div class=\"col-sm-4\">\r\n                <br />\r\n                <div class=\"card\">\r\n                  <article class=\"card-body\">\r\n                    <h4 class=\"card-title mb-4 mt-1\">Sign in</h4>\r\n                    <form>\r\n                      <div class=\"form-group\">\r\n                        <label>Your username</label>\r\n                        <input\r\n                          name=\"username\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Username\"\r\n                          onChange={this.changeHandle}\r\n                        />\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>Your password</label>\r\n                        <input\r\n                          name=\"password\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"******\"\r\n                          type=\"password\"\r\n                          onChange={this.changeHandle}\r\n                        />\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <div class=\"checkbox\"></div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          class=\"btn btn-primary btn-block\"\r\n                          onClick={this.loginHandle}\r\n                        >\r\n                          {\" \"}\r\n                          Login{\" \"}\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          class=\"btn btn-primary btn-block\"\r\n                          onClick={this.signUpHandle}\r\n                        >\r\n                          {\" \"}\r\n                          Sign Up{\" \"}\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </article>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Success extends Component {\r\n  state = { back: false };\r\n  xHandle = event => {\r\n    this.setState({ back: true });\r\n  };\r\n  render() {\r\n    if (this.state.back) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div class=\"col-sm-6 col-md-6\">\r\n              <br />\r\n              <div class=\"alert alert-success\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"close\"\r\n                  data-dismiss=\"alert\"\r\n                  aria-hidden=\"true\"\r\n                  onClick={this.xHandle}\r\n                >\r\n                  Ã—\r\n                </button>\r\n                <span class=\"glyphicon glyphicon-ok\"></span>{\" \"}\r\n                <strong>Congratulation!!!</strong>\r\n                <hr class=\"message-inner-separator\" />\r\n                <p>{this.props.mess}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Success;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Failed extends Component {\r\n  state = {\r\n    back: false\r\n  };\r\n  xHandle = event => {\r\n    this.setState({ back: true });\r\n  };\r\n  render() {\r\n    if (this.state.back) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div class=\"col-sm-6 col-md-6\">\r\n              <br />\r\n              <div class=\"alert alert-danger\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"close\"\r\n                  data-dismiss=\"alert\"\r\n                  aria-hidden=\"true\"\r\n                  onClick={this.xHandle}\r\n                >\r\n                  Ã—\r\n                </button>\r\n                <span class=\"glyphicon glyphicon-ok\"></span>{\" \"}\r\n                <strong>Sorry!!!</strong>\r\n                <hr class=\"message-inner-separator\" />\r\n                <p>You are failed to login</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Failed;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    success: false,\r\n    created: false\r\n  };\r\n  changeHandle = event => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  createHandle = event => {\r\n    event.preventDefault();\r\n    const dataInput = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    axios({\r\n      url: \"http://localhost:8080/createAccount\",\r\n      method: \"POST\",\r\n      data: dataInput\r\n    })\r\n      .then(res => {\r\n        console.log(\"Data has been sent to server\");\r\n\r\n        if (res.data.mess == \"success\") {\r\n          this.setState({\r\n            success: true,\r\n            created: true\r\n          });\r\n        } else {\r\n          this.setState({\r\n            success: false,\r\n            created: true\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Server err\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.created) {\r\n      if (this.state.success) {\r\n        return <Redirect to=\"/createSuccess\" />;\r\n      } else {\r\n        return <Redirect to=\"/failed\" />;\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"container\" style={{ height: \"100vh\" }}>\r\n          <div\r\n            className=\"row justify-content-center\"\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <div class=\"col-sm-4\">\r\n              <br />\r\n              <div class=\"card\">\r\n                <article class=\"card-body\">\r\n                  <h4 class=\"card-title mb-4 mt-1\">Create Account</h4>\r\n                  <form>\r\n                    <div class=\"form-group\">\r\n                      <label>Your username</label>\r\n                      <input\r\n                        name=\"username\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Username\"\r\n                        onChange={this.changeHandle}\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label>Your password</label>\r\n                      <input\r\n                        name=\"password\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"******\"\r\n                        type=\"password\"\r\n                        onChange={this.changeHandle}\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <div class=\"checkbox\"></div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        class=\"btn btn-primary btn-block\"\r\n                        onClick={this.createHandle}\r\n                      >\r\n                        {\" \"}\r\n                        Create Account{\" \"}\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </article>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/login.jsx\";\nimport Success from \"./components/success.jsx\";\nimport Failed from \"./components/failed\";\nimport SignUp from \"./components/signUp\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/success\">\n            <Success mess={\"You successfully logined in.\"} />\n          </Route>\n          <Route path=\"/createSuccess\">\n            <Success mess=\"You successfully created an account.\" />\n          </Route>\n          <Route path=\"/failed\" component={Failed} />\n          <Route path=\"/signUp\" component={SignUp} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}